#!/bin/bash
#PBS -l nodes=1:ppn=1,walltime=2:00:00
#PBS -N roiGeneration
#PBS -V

module load singularity 2> /dev/null

inflate=`jq -r '.inflate' config.json`
mask=`jq -r '.mask' config.json`

[ -z "$FREESURFER_LICENSE" ] && echo "Please set FREESURFER_LICENSE in .bashrc" && exit 1;

echo "creating masks"
if [ ${mask} == 'null' ];
then
    time singularity exec -e docker://brainlife/fsl:5.0.9 ./brainmask.sh
else
    echo "brainmask exists. skipping"
fi
time singularity exec --writable -e docker://brainlife/freesurfer:6.0.0 bash -c "echo $FREESURFER_LICENSE > /usr/local/freesurfer/license.txt && ./create_wm_mask.sh"

echo "inflating ROIs"
time singularity exec -e docker://brainlife/afni:16.3.0 ./roiInflate.sh

echo "roi generation"
singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a ./ROI/roiGeneration

## Clean up
mkdir parc;
mkdir rois;
mkdir rois/rois;
mv parc_inflate_GMI.nii.gz ./parc/parc.nii.gz;
mv parc_inflate_GMI.niml.lt ./parc/key.txt;
mv *ROI*.nii.gz ./rois/rois/;
rm -rf *ROI*.mat *inflate*.niml.lt *.nii.gz;

if [[ ${INFLATE} == 'null' ]];then
    echo "{\"tags\": [\"no_inflate\" ]}" > product.json
else
    echo "{\"tags\": [\"inflate\" ]}" > product.json
fi

if [ -z "$(ls -A ./rois/)" ]; then
    echo "ROI files missing."
    exit 1
else
    exit 0
fi


